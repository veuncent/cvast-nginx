# http
server {
    server_name <domain_names>;
    listen 80;

	# Allow access to the letsencrypt ACME Challenge
	location ~ /\.well-known\/acme-challenge {
		allow all;
		root /var/www;
	}

	location /robots.txt {
		return 200 "User-agent: *\nDisallow:<allow_or_disallow>\n";
	}

    location <static_url> {
		alias /www/static/;
	}


    set $remote_proxy_host "https://<remote_proxy_host>";

    location <remote_proxy_subpath>/ {
        proxy_ignore_client_abort on;
        rewrite ^<remote_proxy_subpath>/(.*) /$1 break;
            proxy_pass $remote_proxy_host;

        ### force timeouts if one of backend is died ##
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

        ### Set headers ####
        proxy_set_header        Accept-Encoding     "";
        proxy_set_header        Host                $host;
        proxy_set_header        X-Real-IP           $remote_addr;
        proxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto   $scheme;
        add_header              Front-End-Https     on;

        ### By default we don't want to redirect it ####
        proxy_redirect     off;
    }


    location / {
        root      /usr/share/nginx/html;
        index     index.html index.htm;
        try_files $uri/index.html $uri.html $uri @upstream;
    }

    location @upstream {
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
        proxy_pass http://<local_proxy_host>:<local_proxy_port>;
    }

}
